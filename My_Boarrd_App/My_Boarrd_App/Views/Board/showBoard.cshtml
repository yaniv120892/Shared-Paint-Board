
@using My_Boarrd_App.Models;
@{

    ViewBag.Title = "showBoard";
}
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
</head>
<style>
    .my_button {
        border: none;
        text-align: center;
        font-size: 12px;
        cursor: pointer;
        border-radius: 8px;
        opacity: 0.6;
        border-style: outset;
    }
    .my_button:hover {opacity: 1}
</style>
<h2>Shared Web Board</h2>
    <div>
        <table>
            <tr>
                <td><b>Group Name: </b></td>
                <td> @ViewBag.groupName</td>
            </tr>
            <tr>
                <td><b>IP: </b></td>
                <td> @ViewBag.ip</td>
            </tr>
            <tr>
                <td><b>Useragent:</b> </td>
                <td> @ViewBag.useragent</td>
            </tr>

        </table>
    </div>
    <div id="canvasDiv" style="width: 70%; float:left"></div>

    <div style="width:30%; float:right;">
        <table>
            <tr></tr>
            <tr>
                <td><b>Color</b></td>
                <td>
                    <table>
                        <tr>
                            <td> <button class="my_button" id="button_black" style="background-color: black;color:white;border:inset;font-size:20px" onclick="changeColor('black')">black </button></td>
                            <td> <button class="my_button" id="button_red" style="background-color: red;color:black" onclick="changeColor('red')">red</button></td>
                            <td> <button class="my_button" id="button_yellow" style="background-color: yellow;color:black" onclick="changeColor('yellow')">yellow</button></td>
                            <td> <button class="my_button" id="button_blue" style="background-color: blue;color:white" onclick="changeColor('blue')">blue</button></td>
                            <td> <button class="my_button" id="button_green" style="background-color: green;color:black" onclick="changeColor('green')">green</button></td>
                        </tr>
                    </table>
            </tr>
            <tr>
                <td><b>Element Type</b></td>
                <td>
                    <table>
                        <tr>
                            <td><button class="my_button" id="button_RECTANGULAR" style="border:inset;font-size:20px" onclick="changeElementType('RECTANGULAR')"><span class="glyphicon glyphicon-unchecked">Rectangular</span></button></td>
                            <td><button class="my_button" id="button_CIRCLE" onclick="changeElementType('CIRCLE')"><i class="fa fa-circle">Circle</i></button></td>
                            <td><button class="my_button" id="button_LINE" onclick="changeElementType('LINE')"><span class="glyphicons-vector-path-line">line</span></button></td>
                        </tr>
                    </table>
            </tr>
            <tr>
                <td><b>Mode</b></td>
                <td>
                    <table>
                        <tr>
                            <td>
                                <button class="my_button" id="button_draw" style="border:inset;font-size:20px" onclick="change_mode('Draw')"><i class="fa fa-paint-brush">Draw</i></button>
                                <button class="my_button" id="button_erase" onclick="change_mode('Erase')"><span class="glyphicon glyphicon-erase">Erase</span></button>
                            </td>
                        </tr>
                    </table>
            </tr>
        </table>
    </div>




        <script src="~/Scripts/jquery-1.10.2.min.js"></script>
        <script src="~/Scripts/jquery-1.10.2.js"></script>
        <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
        <script src="~/Scripts/jquery.signalR-2.3.0.js"></script>
        <script src="~/signalr/hubs"></script>
        <script src="~/Scripts/json2.js"></script>
        <script src="~/Scripts/json2.min.js"></script>
        <script>
        </script>



        <script type="text/javascript">
            var user_agent = navigator.userAgent;
            var canvasDiv = document.getElementById('canvasDiv');
            canvas = document.createElement('canvas');
            canvas.setAttribute('width', 600);
            canvas.setAttribute('height', 400);
            canvas.setAttribute('style', "border: 1px solid black;curser: pointer")
            canvas.setAttribute('id', 'canvas');
            canvasDiv.appendChild(canvas);
            if (typeof G_vmlCanvasManager != 'undefined') {
                canvas = G_vmlCanvasManager.initElement(canvas);
            }
            context = canvas.getContext("2d");
            load_canvas_first_time();


            var clickX = new Array();
            var clickY = new Array();
            var clickColor = new Array();
            var elementTypes = new Array();


            var paint;
            var curColor = "black";
            var curElementType = "RECTANGULAR";
            var curr_group_id = @ViewBag.groupID;
            var curr_mode = "Draw";
            var curr_user_id = @ViewBag.userID;
            var curr_user_typed = "@ViewBag.userType";


            function drawElement(startPointX, startPointY, endPointX, endPointY, color, element_type) {
                colorHex = colourNameToHex(color);

                context.lineWidth = 1;
                context.fillStyle = colorHex;
                context.strokeStyle = colorHex;

                if (element_type == "RECTANGULAR") {
                    context.fillRect(
                        Math.min(startPointX,endPointX),
                        Math.min(startPointY,endPointY),
                        Math.abs(endPointX -startPointX) ,
                        Math.abs(endPointY -startPointY));
                }
                if (element_type == "CIRCLE") {
                    context.beginPath();
                    context.arc(startPointX+Math.round(Math.abs(endPointX -startPointX) /2.0),
                                       startPointY+Math.round(Math.abs(endPointY -startPointY) /2.0),
                                       Math.abs(endPointX -startPointX),
                                       0,
                                       2*Math.PI);
                    context.fill();
                }
                if (element_type == "LINE") {
                    context.beginPath();
                    context.moveTo(startPointX, startPointY);
                    context.lineTo(endPointX, endPointY);
                    context.stroke();
                }


            }
            function eraseElement(startPointX, startPointY, endPointX, endPointY,element_type) {
                context.fillStyle = colourNameToHex("white");
                context.strokeStyle = colourNameToHex("white");
                context.lineWidth = 3;

                if (element_type == "RECTANGULAR") {
                    context.fillRect(
                        Math.min(startPointX,endPointX),
                        Math.min(startPointY,endPointY),
                        Math.abs(endPointX -startPointX) ,
                        Math.abs(endPointY -startPointY));
                }
                if (element_type == "CIRCLE") {
                    context.beginPath();
                    context.arc(startPointX+Math.round(Math.abs(endPointX -startPointX) /2.0),
                                       startPointY+Math.round(Math.abs(endPointY -startPointY) /2.0),
                                       Math.abs(endPointX -startPointX)+2,
                                       0,
                                       2*Math.PI);
                    context.fill();
                }
                if (element_type == "LINE") {
                    context.beginPath();
                    context.moveTo(startPointX, startPointY);
                    context.lineTo(endPointX, endPointY);
                    context.stroke();
                }

            }

            function changeColor(value) {
                var old_clicked_button = document.getElementById("button_"+curColor);
                old_clicked_button.style.fontSize = "12px";
                old_clicked_button.style.border = "outset";

                curColor = value;
                var new_clicked_button = document.getElementById("button_"+curColor);
                new_clicked_button.style.fontSize = "20px";
                new_clicked_button.style.border = "inset";
            }
            function changeElementType(value) {
                var old_clicked_button = document.getElementById("button_"+curElementType);
                old_clicked_button.style.fontSize = "12px";
                old_clicked_button.style.border = "outset";
                curElementType = value;
                var new_clicked_button = document.getElementById("button_"+curElementType);
                new_clicked_button.style.fontSize = "20px";
                new_clicked_button.style.border = "inset";

            }

            function load_canvas_first_time() {
                var jsonArray = JSON.parse("@ViewBag.jsoElementsInDraw".replace(/(&quot\;)/g, "\""))
                for (var i in jsonArray) {
                    var element = jsonArray[i];
                    drawElement(element.startPointX, element.startPointY, element.endPointX,
                        element.endPointY , element.color, element.element_type);
                }
            }


            function change_mode(new_mode) {
                if(new_mode == "Draw")
                {
                    curr_mode = "Draw";
                    var button_draw = document.getElementById("button_draw");
                    button_draw.style.fontSize = "20px";
                    button_draw.style.border = "inset";
                    var button_erase = document.getElementById("button_erase");
                    button_erase.style.fontSize = "12px";
                    button_erase.style.border = "outset";
                }
                else
                {
                    curr_mode = "Erase";
                    var button_draw = document.getElementById("button_draw");
                    button_draw.style.fontSize = "12px";
                    button_draw.style.border = "outset";

                    var button_erase = document.getElementById("button_erase");
                    button_erase.style.fontSize = "20px";
                    button_erase.style.border = "inset";
                }
            }






            $('#canvas').hover(function () {
                if(curr_mode == "Draw")
                {
                    console.log("inside hover when draw");
                    $(this).css('cursor','crosshair');
                }
                else
                {
                    console.log("inside hover when erase");
                    $(this).css('cursor','not-allowed');
                }
            },
            function () {
                $(this).css('cursor','auto');
            }
                );

            $(function () {
                var draw = $.connection.drawHub;
                draw.client.updateCanvas = function (action,startPointX, startPointY, endPointX, endPointY, color, element_type, group_id) {
                    if (curr_group_id == group_id)
                    {
                        if(action == "Draw")
                        {
                            drawElement(startPointX, startPointY, endPointX, endPointY, color, element_type);
                        }
                        if(action == "Erase")
                        {
                            eraseElement(startPointX, startPointY, endPointX,endPointY,element_type);
                        }
                    }
                }
                $.connection.hub.start().done(function () {
                    $('#canvas').mousedown(function (e) {
                        startPointX = e.pageX - this.offsetLeft;
                        startPointY = e.pageY - this.offsetTop;
                    });
                    $('#canvas').mouseup(function (e) {
                        if(curr_mode == "Draw")
                        {
                            endPointX = e.pageX - this.offsetLeft;
                            endPointY = e.pageY - this.offsetTop;
                            if(curElementType == "CIRCLE" || curElementType == "RECTANGULAR" )
                            {
                                if(endPointX < startPointX)
                                {
                                    var tmp = endPointX;
                                    endPointX = startPointX;
                                    startPointX = tmp;
                                }
                                if(endPointY < startPointY)
                                {
                                    var tmp = endPointY;
                                    endPointY = startPointY;
                                    startPointY = tmp;
                                }
                            }
                           
                            draw.server.drawOrEraseElement("Draw",startPointX, startPointY,endPointX, endPointY, curColor, curElementType, curr_group_id,curr_user_id);
                        }
                        if(curr_mode == "Erase")
                        {
                            draw.server.drawOrEraseElement("Erase",startPointX, startPointY,0,0, "", "", curr_group_id,curr_user_id);
                        }

                    });

                });
            });


            function colourNameToHex(colour)
            {
                var colours = {"aliceblue":"#f0f8ff","antiquewhite":"#faebd7","aqua":"#00ffff","aquamarine":"#7fffd4","azure":"#f0ffff",
                    "beige":"#f5f5dc","bisque":"#ffe4c4","black":"#000000","blanchedalmond":"#ffebcd","blue":"#0000ff","blueviolet":"#8a2be2","brown":"#a52a2a","burlywood":"#deb887",
                    "cadetblue":"#5f9ea0","chartreuse":"#7fff00","chocolate":"#d2691e","coral":"#ff7f50","cornflowerblue":"#6495ed","cornsilk":"#fff8dc","crimson":"#dc143c","cyan":"#00ffff",
                    "darkblue":"#00008b","darkcyan":"#008b8b","darkgoldenrod":"#b8860b","darkgray":"#a9a9a9","darkgreen":"#006400","darkkhaki":"#bdb76b","darkmagenta":"#8b008b","darkolivegreen":"#556b2f",
                    "darkorange":"#ff8c00","darkorchid":"#9932cc","darkred":"#8b0000","darksalmon":"#e9967a","darkseagreen":"#8fbc8f","darkslateblue":"#483d8b","darkslategray":"#2f4f4f","darkturquoise":"#00ced1",
                    "darkviolet":"#9400d3","deeppink":"#ff1493","deepskyblue":"#00bfff","dimgray":"#696969","dodgerblue":"#1e90ff",
                    "firebrick":"#b22222","floralwhite":"#fffaf0","forestgreen":"#228b22","fuchsia":"#ff00ff",
                    "gainsboro":"#dcdcdc","ghostwhite":"#f8f8ff","gold":"#ffd700","goldenrod":"#daa520","gray":"#808080","green":"#008000","greenyellow":"#adff2f",
                    "honeydew":"#f0fff0","hotpink":"#ff69b4",
                    "indianred ":"#cd5c5c","indigo":"#4b0082","ivory":"#fffff0","khaki":"#f0e68c",
                    "lavender":"#e6e6fa","lavenderblush":"#fff0f5","lawngreen":"#7cfc00","lemonchiffon":"#fffacd","lightblue":"#add8e6","lightcoral":"#f08080","lightcyan":"#e0ffff","lightgoldenrodyellow":"#fafad2",
                    "lightgrey":"#d3d3d3","lightgreen":"#90ee90","lightpink":"#ffb6c1","lightsalmon":"#ffa07a","lightseagreen":"#20b2aa","lightskyblue":"#87cefa","lightslategray":"#778899","lightsteelblue":"#b0c4de",
                    "lightyellow":"#ffffe0","lime":"#00ff00","limegreen":"#32cd32","linen":"#faf0e6",
                    "magenta":"#ff00ff","maroon":"#800000","mediumaquamarine":"#66cdaa","mediumblue":"#0000cd","mediumorchid":"#ba55d3","mediumpurple":"#9370d8","mediumseagreen":"#3cb371","mediumslateblue":"#7b68ee",
                    "mediumspringgreen":"#00fa9a","mediumturquoise":"#48d1cc","mediumvioletred":"#c71585","midnightblue":"#191970","mintcream":"#f5fffa","mistyrose":"#ffe4e1","moccasin":"#ffe4b5",
                    "navajowhite":"#ffdead","navy":"#000080",
                    "oldlace":"#fdf5e6","olive":"#808000","olivedrab":"#6b8e23","orange":"#ffa500","orangered":"#ff4500","orchid":"#da70d6",
                    "palegoldenrod":"#eee8aa","palegreen":"#98fb98","paleturquoise":"#afeeee","palevioletred":"#d87093","papayawhip":"#ffefd5","peachpuff":"#ffdab9","peru":"#cd853f","pink":"#ffc0cb","plum":"#dda0dd","powderblue":"#b0e0e6","purple":"#800080",
                    "rebeccapurple":"#663399","red":"#ff0000","rosybrown":"#bc8f8f","royalblue":"#4169e1",
                    "saddlebrown":"#8b4513","salmon":"#fa8072","sandybrown":"#f4a460","seagreen":"#2e8b57","seashell":"#fff5ee","sienna":"#a0522d","silver":"#c0c0c0","skyblue":"#87ceeb","slateblue":"#6a5acd","slategray":"#708090","snow":"#fffafa","springgreen":"#00ff7f","steelblue":"#4682b4",
                    "tan":"#d2b48c","teal":"#008080","thistle":"#d8bfd8","tomato":"#ff6347","turquoise":"#40e0d0",
                    "violet":"#ee82ee",
                    "wheat":"#f5deb3","white":"#ffffff","whitesmoke":"#f5f5f5",
                    "yellow":"#ffff00","yellowgreen":"#9acd32"};

                if (typeof colours[colour.toLowerCase()] != 'undefined')
                    return colours[colour.toLowerCase()];

                return false;
            }
</script>



